<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tips on Halog</title>
    <link>https://haservi.github.io/categories/tips/</link>
    <description>Recent content in Tips on Halog</description>
    <image>
      <title>Halog</title>
      <url>https://haservi.github.io/cover.jpeg</url>
      <link>https://haservi.github.io/cover.jpeg</link>
    </image>
    <generator>Hugo -- 0.125.7</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 23 Jul 2024 00:33:33 +0900</lastBuildDate>
    <atom:link href="https://haservi.github.io/categories/tips/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>안드로이드 Wi-Fi 무선 디버깅 방법</title>
      <link>https://haservi.github.io/posts/tips/android-wireless-debug/</link>
      <pubDate>Tue, 23 Jul 2024 00:33:33 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/android-wireless-debug/</guid>
      <description>Android 무선 디버깅 하는 방법입니다.</description>
    </item>
    <item>
      <title>Git 상위 폴더에서 한번에 pull하기</title>
      <link>https://haservi.github.io/posts/tips/git-recursive-pull/</link>
      <pubDate>Tue, 16 Jul 2024 19:53:00 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/git-recursive-pull/</guid>
      <description>상위 폴더에서 여러 Git 저장소를 한번에 pull 하는 방법입니다.(window, mac)</description>
    </item>
    <item>
      <title>리눅스에서 활성화된 process 종료 방법</title>
      <link>https://haservi.github.io/posts/tips/ubuntu-port-kill/</link>
      <pubDate>Thu, 11 May 2023 19:14:09 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/ubuntu-port-kill/</guid>
      <description>netstat을 사용하기 위해서 우선 net-tools를 설치해야합니다.
1 sudo apt install net-tools 설치 후 netstat -tulpn 를 입력하면 현재 열린 네트워크 포트와 해당 포트를 열어놓은 프로세스를 보여주는 도구입니다.
여기서 각 옵션의 의미는 다음과 같습니다.
-t: TCP 프로토콜 사용 포트 -u: UDP 프로토콜 사용 포트 -l: 포트를 열어놓은 프로세스 출력 -p: 프로세스 ID 출력 -n: 포트와 프로세스를 숫자로 출력 따라서 netstat -tulpn 명령어를 실행하면, 현재 열린 TCP/UDP 포트와 해당 포트를 열어놓은 프로세스의 정보를 확인할 수 있습니다.</description>
    </item>
    <item>
      <title>WSL 환경에서 내부 MariaDB 설치하기</title>
      <link>https://haservi.github.io/posts/devops/wsl/mariadb-setting/</link>
      <pubDate>Sat, 15 Apr 2023 16:22:31 +0900</pubDate>
      <guid>https://haservi.github.io/posts/devops/wsl/mariadb-setting/</guid>
      <description>WSL 환경에서 DB 설정 방법에 대해 정리했습니다.
우선 기본적으로 윈도우 환경이며, WSL을 이용해 우분투 18.04 버전을 설치합니다.
mariadb-server 설치 및 실행 패키지를 최신으로 업데이트 합니다.
1 2 sudo apt-get update sudo apt-get upgrade 우선 mariadb-server를 설치합니다.
1 2 3 sudo apt install mariadb-server sudo mysql -u root -p # 실행 DB 저장소 경로 변경 방법 만약 db의 저장소를 변경하고 싶다면 아래와 같이 진행하면 됩니다.
우선 db의 경로를 /home/data/mysql으로 가정하겠습니다.
db 접속 후 현재 db의 경로를 확인합니다.</description>
    </item>
    <item>
      <title>Gerrit 코드 리뷰에 대해</title>
      <link>https://haservi.github.io/posts/tips/git-gerrit/</link>
      <pubDate>Mon, 20 Mar 2023 13:42:30 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/git-gerrit/</guid>
      <description>Gerrit은 오픈 소스 웹 기반 코드 리뷰 도구로, Git 버전 관리 시스템을 사용하는 프로젝트에서 코드 검토 및 협업을 용이하게 해줍니다. Gerrit은 구글에서 개발되었으며, 안드로이드 오픈 소스 프로젝트(AOSP) 등 여러 대규모 프로젝트에서 사용되고 있습니다.
Gerrit을 사용하려면 Gerrit 서버를 설치하고 구성해야 합니다.
설치 방법은 공식 문서에서 확인할 수 있습니다.
Gerrit은 웹 기반 코드 커밋 및 버전 관리 도구로, 코드 리뷰를 위한 기능을 제공합니다.
개발자들은 Gerrit을 이용하여 Git 저장소에서 작업한 코드 변경 사항을 리뷰하고, 변경을 승인하거나 거부하고, 수정 요청을 할 수 있습니다.</description>
    </item>
    <item>
      <title>Linux에서 배포 스크립트($&#39;/r&#39;) 발생 시 처리 방법</title>
      <link>https://haservi.github.io/posts/tips/error-script-to-linux/</link>
      <pubDate>Fri, 10 Mar 2023 20:57:33 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/error-script-to-linux/</guid>
      <description>node.js backend 에서 작업 중 테스트 서버에 배포 스크립트를 작성했습니다.
위와 같이 $&#39;\r&#39;: coomand not found가 발생하면 해결 방법은 아래와 같습니다.
1 sed -i &amp;#39;s/\r$//&amp;#39; [스크립트파일.sh] 문제의 원인은 유닉스 기반의 운영체제에서는 줄 바꿈 문자로 줄 바꿈(Line Feed, LF)을 사용하지만, 윈도우 운영체제에서는 줄 바꿈 문자로 CR과 LF를 함께 사용합니다.
그렇기 때문에 유닉스 기반의 운영체제에서는 Windows에서 생성된 텍스트 파일을 처리할 때 이러한 CR 문자가 문제가 될 수 있습니다.
sed 유틸리티를 사용하여 스크립트 파일에서 Windows에서 생성된 줄 바꿈 문자(Carriage Return, CR)를 제거할 수 있습니다.</description>
    </item>
    <item>
      <title>Infra 설정 관련 정리</title>
      <link>https://haservi.github.io/posts/devops/aws/infra-tips/</link>
      <pubDate>Thu, 12 Jan 2023 21:34:04 +0900</pubDate>
      <guid>https://haservi.github.io/posts/devops/aws/infra-tips/</guid>
      <description>인프라 관련 내용 정리가 필요할 것 같아 중요한 키워드 정도로 정리한 내용입니다.
AWS EC2 접속 명령어 기본적으로 pem키를 발급받고 네트워크 보안이 올바르면 아래와 같은 명령어로 pem키를 이용해 접속 가능합니다.
1 2 chmod 400 [pem파일명] ssh -i [pem키 파일명] ubuntu@[퍼블릭 IP 주소] 입력했던 콘솔 보기
1 history bastion host 설정 bastion host란 내부와 외부 네트워크 사이에서 게이트 역할을 수행하는 호스트입니다.
내부 서버나 중요 리소스를 보호하기 위해 생성되며, 일반 유저들에게는 공개하지 않습니다.</description>
    </item>
    <item>
      <title>Windows Nodejs 버전 변경하기</title>
      <link>https://haservi.github.io/posts/tips/window-nodejs-version-change/</link>
      <pubDate>Wed, 26 Oct 2022 22:35:53 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/window-nodejs-version-change/</guid>
      <description>종종 프로젝트 중에는 특정 Node.js 버전에서만 동작하는 프로젝트가 있습니다. 이럴 경우 Docker를 이용하여 컨테이너를 만들거나 로컬인 경우 해당 버전에 맞는 Node.js를 설치해야 합니다.
이번 내용은 전에 작성한 jdk 버전을 변경하듯이 Node.js 버전을 변경하는 방법에 대해 알아볼께요.
알림
해당 글은 Window를 기준으로 작성했습니다.
Mac의 경우는 해당 stackoverflow 질문글을 참조해주세요.
먼저 해당 링크에서 우측의 Release 버튼을 선택합니다. nvm-setup.exe 파일을 다운로드 받습니다. 아래와 같이 파일을 설치하고 버전을 커맨드로 입력해보면 설치된 것을 확인할 수 있습니다.</description>
    </item>
    <item>
      <title>OpenJDK 버전 간편하게 변경하기</title>
      <link>https://haservi.github.io/posts/tips/window-java-version-change/</link>
      <pubDate>Tue, 09 Aug 2022 22:32:07 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/window-java-version-change/</guid>
      <description>Window에서 JDK 버전 간편하게 변경하기 Java를 사용하여 프로젝트를 진행하다 보면 우선적으로 OS 명령을 내리기 위한 JDK(Java Develop Kit) 설치가 필요합니다.
그렇지만 특정 Java 버전을 필요로 하는 프로젝트도 있습니다.
이를 해결하기 위해 도커로 환경을 구성하거나 해당 로컬 컴퓨터의 환경변수를 설정하여 변경하는 것도 가능합니다.
해당 글은 스크립트를 생성하여 터미널 명령어로 간단하게 자바 버전을 변경하는 방법입니다.
모든 설정이 끝나면 아래처럼 터미널에서 명령어만 입력하면 스크립트를 변경 할 수 있습니다.
JDK 설치 및 폴더명 변경 우선 JDK를 다운로드 아무래도 라이선스의 문제가 있을 수 있으니 OpenJDK를 다운받는 것을 추천드립니다.</description>
    </item>
    <item>
      <title>윈도우 Port 강제 종료 방법</title>
      <link>https://haservi.github.io/posts/tips/window-port-taskkill/</link>
      <pubDate>Mon, 23 May 2022 21:49:41 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/window-port-taskkill/</guid>
      <description>종종 테스트 중 이전에 실행한 Port가 남아서 충돌나는 경우가 있습니다.
기존에 존재하는 Port의 PID를 제거하면 삭제할 수 있습니다.
Port 강제 종료 방법 먼저 windows + R 을 눌러 실행 스크립트를 열어주고 cmd를 입력하여 커맨드 창을 열어줍니다. 명령어로 netstat -a -o를 입력하면 현재 연결된 네트워크 상태를 볼 수 있습니다. 위와 같이 8080포트가 존재하면 우측에 있는 PID의 번호를 기억합니다. 여기서는 49480의 값입니다. taskkill /f /pid 49480을 입력하면 해당 8080포트를 제거할 수 있습니다. </description>
    </item>
    <item>
      <title>비쥬얼 스튜디오 코드에서 자동완성 해제하기</title>
      <link>https://haservi.github.io/posts/tips/visual-studio-code-auto-complete/</link>
      <pubDate>Sun, 03 Apr 2022 14:30:00 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/visual-studio-code-auto-complete/</guid>
      <description>Visual Studio Code의 자동완성 기능 해제 방법 프로그램 실행 후 설정(Ctrl + , 또는 Command + ,)으로 들어간 후 검색항목에 intelliSense를 검색하면 여러 체크박스 리스트를 볼 수 있습니다.
위(Show Classes)에서부터 아래(Show Words)까지 전부 체크 해제를 하면 자동완성 기능이 비활성화 됩니다.
그렇지만 너무 많은 옵션이 있기 때문에 전부 클릭 해제하기가 귀찮은 경우 아래의 JSON으로 추가할 수 있습니다.
오른쪽 위의 설정으로 들어가서 아래의 값들을 복사 후 붙여 넣어주면 됩니다.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 &amp;#34;explorer.</description>
    </item>
    <item>
      <title>Git Commit 메시지 규칙</title>
      <link>https://haservi.github.io/posts/tips/git-commit-message-rule/</link>
      <pubDate>Tue, 01 Mar 2022 22:54:30 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/git-commit-message-rule/</guid>
      <description>Git Commit git commit message convetion은 회사 또는 프로젝트 마다 다를 수 있습니다.
message의 형태는 다를 수 있지만 기본적인 목적은 같습니다.
잘 만들어진 git 커밋 메시지는 해당 프로젝트에서 작업하는 팀원과 미래의 자신에게 변경 사항에 대한 의미를 전달하기 위한 좋은 방법입니다.
일반적으로 커밋 메시지는 다음과 같은 구조를 권장합니다.
1 2 3 4 5 type: Subject body footer 보통 위와 같은 형태입니다.
제목은 새로운 기능 추가인 경우 feat: Subject, Feat: Subject, Feat Subject, Feature Subject 등 조금씩 type의 형태가 다르지만 그건 프로젝트에 따라 일관되게 맞추면 됩니다.</description>
    </item>
    <item>
      <title>git CRLF 개행 문자 차이 해결 방법</title>
      <link>https://haservi.github.io/posts/tips/git-crlf/</link>
      <pubDate>Mon, 21 Feb 2022 21:50:28 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/git-crlf/</guid>
      <description>Windows는 line ending으로 CR(Carriage-Return, \r)과 LF(Line Feed \n)을 사용합니다. CRLF는 커서를 다음 라인의 맨앞으로 옮기는 표시이며, ↲ 이러한 표현입니다.
Mac, Linux(Unix 계열)의 경우 LF(Line Feed \n)를 사용합니다. LF는 현재 위치에서 바로 아래로 이동하는 것을 의미하며, ↓ 와 같은 표현입니다.
문제는 같은 작업 영역에서 같은 코드를 수정할 경우 windows와 mac의 코드가 일치하더라도 커서의 표현값이 다르기 때문에 충돌이 일어나는 경우가 발생합니다.
해결 방법으로는 각 운영체제별로 git을 기준으로 LF로 맞춰주는 것입니다.
Windows는 CRLF를 LF로 변경되도록 git config 설정 중 core.</description>
    </item>
    <item>
      <title>Github 저장소 안의 폴더 다운로드 받는 방법</title>
      <link>https://haservi.github.io/posts/tips/git-inner-folder-download/</link>
      <pubDate>Sun, 28 Nov 2021 21:30:06 +0900</pubDate>
      <guid>https://haservi.github.io/posts/tips/git-inner-folder-download/</guid>
      <description>기본적으로 웹상에서는 Git 저장소 안의 폴더를 다운받으려면 해당 저장소 전부를 다운 받은 후에 특정 폴더의 정보를 봐야 합니다.
간단한 방법은 아래의 링크에서 다운로드 받는게 제일 쉬운방법이지만 터미널에서 다운로드 방법도 한번 다루어보겠습니다. 터미널로 다운 받은 경우 이후 해당 소스가 변경이 있다면 당겨올 수 있는 이점도 있습니다.
해결방법 웹 다운로드 https://downgit.github.io/#/home 해당 사이트에 github 저장소 특정 폴더의 링크를 복사 한 후 붙여넣고 Download 버튼 클릭
터미널 다운로드 기본적으로 git이 설치돼 있어야합니다.
예제로 https://github.</description>
    </item>
  </channel>
</rss>
